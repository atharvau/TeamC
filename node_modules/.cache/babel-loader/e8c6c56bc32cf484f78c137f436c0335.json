{"ast":null,"code":"import _toConsumableArray from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/athrva/MyProjects/React/chat/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, subscribe, dispatch, combineReducers } from \"redux\";\nimport Check from \"./redux/Check\";\nvar initialUserState = {};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUserState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"ATTACK\") {\n    return _objectSpread({}, state, {\n      arr: _toConsumableArray(state.arr).concat([action.payload])\n    });\n  }\n};\n\nvar store = createStore(reducer, [], window.devToolsExtension && window.devToolsExtension());\nstore.subscribe(function () {});\nstore.dispatch({\n  type: \"ATTACK\",\n  payload: \"A\"\n});\nstore.dispatch({\n  type: \"ATTACK\",\n  payload: \"TH\"\n});\nstore.dispatch({\n  type: \"ATTACK\",\n  payload: \"AR\"\n});\nstore.dispatch({\n  type: \"ATTACK\",\n  payload: \"VA\"\n});\nReactDOM.render(React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/athrva/MyProjects/React/chat/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","Provider","createStore","subscribe","dispatch","combineReducers","Check","initialUserState","reducer","state","action","type","arr","payload","store","window","devToolsExtension","render","document","getElementById","unregister"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,EAA2CC,eAA3C,QAAkE,OAAlE;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,IAAMC,gBAAgB,GAAG,EAAzB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA2C;AAAA,MAAlCC,KAAkC,uEAA1BF,gBAA0B;AAAA,MAARG,MAAQ;;AACzD,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,6BACKF,KADL;AAEEG,MAAAA,GAAG,qBAAMH,KAAK,CAACG,GAAZ,UAAiBF,MAAM,CAACG,OAAxB;AAFL;AAID;AACF,CAPD;;AAQA,IAAMC,KAAK,GAAGZ,WAAW,CACvBM,OADuB,EAEvB,EAFuB,EAGvBO,MAAM,CAACC,iBAAP,IAA4BD,MAAM,CAACC,iBAAP,EAHL,CAAzB;AAMAF,KAAK,CAACX,SAAN,CAAgB,YAAM,CAAE,CAAxB;AAEAW,KAAK,CAACV,QAAN,CAAe;AAAEO,EAAAA,IAAI,EAAE,QAAR;AAAkBE,EAAAA,OAAO,EAAE;AAA3B,CAAf;AACAC,KAAK,CAACV,QAAN,CAAe;AAAEO,EAAAA,IAAI,EAAE,QAAR;AAAkBE,EAAAA,OAAO,EAAE;AAA3B,CAAf;AACAC,KAAK,CAACV,QAAN,CAAe;AAAEO,EAAAA,IAAI,EAAE,QAAR;AAAkBE,EAAAA,OAAO,EAAE;AAA3B,CAAf;AACAC,KAAK,CAACV,QAAN,CAAe;AAAEO,EAAAA,IAAI,EAAE,QAAR;AAAkBE,EAAAA,OAAO,EAAE;AAA3B,CAAf;AAEAhB,QAAQ,CAACoB,MAAT,CACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, subscribe, dispatch, combineReducers } from \"redux\";\nimport Check from \"./redux/Check\";\nconst initialUserState = {\n\n\n\n};\n\nconst reducer = function(state = initialUserState, action) {\n  if (action.type === \"ATTACK\") {\n    return {\n      ...state,\n      arr: [...state.arr, action.payload]\n    };\n  }\n};\nconst store = createStore(\n  reducer,\n  [],\n  window.devToolsExtension && window.devToolsExtension()\n);\n\nstore.subscribe(() => {});\n\nstore.dispatch({ type: \"ATTACK\", payload: \"A\" });\nstore.dispatch({ type: \"ATTACK\", payload: \"TH\" });\nstore.dispatch({ type: \"ATTACK\", payload: \"AR\" });\nstore.dispatch({ type: \"ATTACK\", payload: \"VA\" });\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}