{"ast":null,"code":"var _jsxFileName = \"/home/athrva/MyProjects/React/chat/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"unstated\";\nimport { createStore, subscribe, dispatch, combineReducers } from \"redux\";\nimport Check from \"./redux/Check\";\n\nvar prodductReducer = function prodductReducer(state, action) {\n  if (action.type === \"ATTACK\") {\n    return action.payload;\n  }\n};\n\nvar userReducer = function userReducer(state, action) {\n  if (action.type === \"ATTACK\") {\n    return action.payload;\n  }\n};\n\nvar allReducers = combineReducers({\n  products: products\n});\nvar store = createStore(reducer, \"Peace\");\nstore.subscribe(function () {});\nstore.dispatch({\n  type: \"ATTACK\",\n  payload: {\n    username: \"A\"\n  }\n});\nvar action = {\n  type: \"CHANGE\",\n  payload: \"RAW\"\n};\nstore.dispatch(action);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(Check, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/athrva/MyProjects/React/chat/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","Provider","createStore","subscribe","dispatch","combineReducers","Check","prodductReducer","state","action","type","payload","userReducer","allReducers","products","store","reducer","username","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,EAA2CC,eAA3C,QAAkE,OAAlE;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAASC,KAAT,EAAgBC,MAAhB,EAAwB;AAC9C,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOD,MAAM,CAACE,OAAd;AACD;AACF,CAJD;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAASJ,KAAT,EAAgBC,MAAhB,EAAwB;AAC1C,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAOD,MAAM,CAACE,OAAd;AACD;AACF,CAJD;;AAMA,IAAME,WAAW,GAACR,eAAe,CAAC;AAACS,EAAAA,QAAQ,EAARA;AAAD,CAAD,CAAjC;AAEA,IAAMC,KAAK,GAAGb,WAAW,CAACc,OAAD,EAAU,OAAV,CAAzB;AAEAD,KAAK,CAACZ,SAAN,CAAgB,YAAM,CAAE,CAAxB;AAEAY,KAAK,CAACX,QAAN,CAAe;AACbM,EAAAA,IAAI,EAAE,QADO;AAEbC,EAAAA,OAAO,EAAE;AAAEM,IAAAA,QAAQ,EAAE;AAAZ;AAFI,CAAf;AAKA,IAAMR,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,QADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;AAKAI,KAAK,CAACX,QAAN,CAAeK,MAAf;AACAZ,QAAQ,CAACqB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACArB,aAAa,CAACsB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"unstated\";\nimport { createStore, subscribe, dispatch, combineReducers } from \"redux\";\nimport Check from \"./redux/Check\";\n\nconst prodductReducer = function(state, action) {\n  if (action.type === \"ATTACK\") {\n    return action.payload;\n  }\n};\nconst userReducer = function(state, action) {\n  if (action.type === \"ATTACK\") {\n    return action.payload;\n  }\n};\n\nconst allReducers=combineReducers({products})\n\nconst store = createStore(reducer, \"Peace\");\n\nstore.subscribe(() => {});\n\nstore.dispatch({\n  type: \"ATTACK\",\n  payload: { username: \"A\" }\n});\n\nconst action = {\n  type: \"CHANGE\",\n  payload: \"RAW\"\n};\n\nstore.dispatch(action);\nReactDOM.render(\n  <Provider store={store}>\n    <Check />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}