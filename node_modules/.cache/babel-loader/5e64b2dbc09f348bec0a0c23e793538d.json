{"ast":null,"code":"import _classCallCheck from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/athrva/MyProjects/React/chat/src/TodoComponent/TodoShow.js\";\nimport React, { Component } from \"react\";\nimport fire from \"../Fire\";\nimport List from \"@material-ui/core/List\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Grid from \"@material-ui/core/Grid\";\n\nvar TodoShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoShow, _Component);\n\n  function TodoShow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoShow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoShow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Todo: []\n    };\n    return _this;\n  }\n\n  _createClass(TodoShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var a = [];\n      var b = [];\n      var ll = {\n        INFO: {}\n      };\n      fire.database().ref().child(\"Todo\").on(\"child_added\", function (da) {\n        var g = false;\n        fire.database().ref().child(\"Todo\").child(da.key).child(\"Completed\").on(\"child_added\", function (d) {\n          b.push(d.val());\n          console.log(d.val());\n\n          if (d.val() === \"username\") {\n            g = true;\n          }\n\n          _this2.setState({\n            Todo: {\n              Completed: b\n            }\n          });\n        });\n        a.push({\n          todo: da.val().info.todo,\n          timestamp: da.val().info.timestamp,\n          key: da.val().info.key,\n          uid: da.val().info.uid,\n          ref: da.key,\n          check: g\n        });\n\n        _this2.setState({\n          Todo: {\n            Completed: b\n          }\n        });\n\n        _this2.setState({\n          Todo: {\n            Info: a\n          }\n        });\n      });\n      this.setState({\n        Todo: {\n          Info: a\n        }\n      });\n    }\n  }, {\n    key: \"s\",\n    value: function s(r) {\n      fire.database().ref().child(\"Todo\").child(r).child(\"Completed\").child(\"uid\").set(\"username\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, console.log(this.state.Completed), this.state.Todo.map(function (Todo) {\n        return React.createElement(Card, {\n          key: Todo.Info.ref,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: Todo.Info.check,\n          onClick: _this3.s.bind(_this3, Todo.Info.ref),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          xs: 11,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          title: Todo.Info.uid,\n          subheader: Todo.Info.timestamp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, Todo.Info.todo), React.createElement(Collapse, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        })))));\n      }));\n    }\n  }]);\n\n  return TodoShow;\n}(Component);\n\nexport default TodoShow;","map":{"version":3,"sources":["/home/athrva/MyProjects/React/chat/src/TodoComponent/TodoShow.js"],"names":["React","Component","fire","List","IconButton","Card","CardHeader","CardContent","Avatar","Typography","MoreVertIcon","Checkbox","ListItem","Collapse","Grid","TodoShow","state","Todo","a","b","ll","INFO","database","ref","child","on","da","g","key","d","push","val","console","log","setState","Completed","todo","info","timestamp","uid","check","Info","r","set","map","s","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport fire from \"../Fire\";\nimport List from \"@material-ui/core/List\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Grid from \"@material-ui/core/Grid\";\nclass TodoShow extends Component {\n  state = {\n    Todo: []\n  };\n\n\n\n\n  componentDidMount() {\n    var a = [];\n    var b = [];\n\n\n  var ll={INFO:{}};\n\n\n\n    fire\n      .database()\n      .ref()\n      .child(\"Todo\")\n      .on(\"child_added\", da => {\n        var g = false;\n        fire\n          .database()\n          .ref()\n          .child(\"Todo\")\n          .child(da.key)\n          .child(\"Completed\")\n          .on(\"child_added\", d => {\n\n\n\n            b.push(d.val());\n            console.log(d.val());\n            if (d.val() === \"username\") {\n              g = true;\n            }\n\n            this.setState({ Todo: { Completed: b } });\n          });\n\n        a.push({\n          \n       \n        todo: da.val().info.todo,\n          timestamp: da.val().info.timestamp,\n          key: da.val().info.key,\n          uid: da.val().info.uid,\n          ref: da.key,\n          check: g\n      \n        });\n\n        this.setState({ Todo: { Completed: b } });\n\n        this.setState({ Todo: { Info: a } });\n      });\n    this.setState({ Todo: { Info: a } });\n  }\n\n  s(r) {\n    fire\n      .database()\n      .ref()\n      .child(\"Todo\")\n      .child(r)\n      .child(\"Completed\")\n      .child(\"uid\")\n      .set(\"username\");\n  }\n\n  render() {\n    return (\n      <div>\n        {console.log(this.state.Completed)}\n        {this.state.Todo.map(Todo => {\n          return (\n            <Card key={Todo.Info.ref}>\n              <Grid container>\n                <Grid item xs={1}>\n                  <Checkbox\n                    checked={Todo.Info.check}\n                    onClick={this.s.bind(this, Todo.Info.ref)}\n                  />\n                </Grid>\n                <Grid item xs={11}>\n                  <CardHeader\n                    title={Todo.Info.uid}\n                    subheader={Todo.Info.timestamp}\n                  />\n\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {Todo.Info.todo}\n                    </Typography>\n                    <Collapse />\n                  </CardContent>\n                </Grid>\n              </Grid>\n            </Card>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default TodoShow;\n"]},"metadata":{},"sourceType":"module"}