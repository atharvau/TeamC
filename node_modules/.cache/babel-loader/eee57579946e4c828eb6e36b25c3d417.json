{"ast":null,"code":"import _toConsumableArray from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/athrva/MyProjects/React/chat/src/NotesComponents/Notes.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      minWidth: \"800px\",\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n};\n\nvar Notes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notes, _React$Component);\n\n  function Notes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Notes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Notes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: [0]\n    };\n\n    _this.handleToggle = function (value) {\n      return function () {\n        var checked = _this.state.checked;\n        var currentIndex = checked.indexOf(value);\n\n        var newChecked = _toConsumableArray(checked);\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        _this.setState({\n          checked: newChecked\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Notes, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(List, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, [0, 1, 2, 3].map(function (value) {\n        return React.createElement(ListItem, {\n          key: value,\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: _this2.handleToggle(value),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: _this2.state.checked.indexOf(value) !== -1,\n          tabIndex: -1,\n          disableRipple: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: \"Line item \".concat(value + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(CommentIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }))));\n      }));\n    }\n  }]);\n\n  return Notes;\n}(React.Component);\n\nNotes.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Notes);","map":{"version":3,"sources":["/home/athrva/MyProjects/React/chat/src/NotesComponents/Notes.js"],"names":["React","PropTypes","withStyles","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","styles","theme","root","width","minWidth","backgroundColor","palette","background","paper","Notes","state","checked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","setState","classes","props","map","undefined","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    minWidth: \"800px\",\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nclass Notes extends React.Component {\n  state = {\n    checked: [0]\n  };\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <List className={classes.root}>\n        {[0, 1, 2, 3].map(value => (\n          <ListItem\n            key={value}\n            role={undefined}\n            dense\n            button\n            onClick={this.handleToggle(value)}\n          >\n            <Checkbox\n              checked={this.state.checked.indexOf(value) !== -1}\n              tabIndex={-1}\n              disableRipple\n            />\n            <ListItemText primary={`Line item ${value + 1}`} />\n            <ListItemSecondaryAction>\n              <IconButton aria-label=\"Info\">\n                <CommentIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n}\n\nNotes.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Notes);\n"]},"metadata":{},"sourceType":"module"}