{"ast":null,"code":"import _classCallCheck from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/athrva/MyProjects/React/chat/src/Polls/PolShow.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classnames from \"classnames\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport fire from \"../Fire\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { keys } from \"@material-ui/core/styles/createBreakpoints\";\n\nvar PolShow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PolShow, _Component);\n\n  _createClass(PolShow, [{\n    key: \"check\",\n    value: function check(ref, title) {\n      if (a == 0) {\n        retur;\n      } // console.log(\"A\");\n      // fire\n      //   .database()\n      //   .ref()\n      //   .child(\"Poll\")\n      //   .child(ref)\n      //   .child(\"vote\")\n      //   .child(title)\n      //   .child(\"Username\")\n      //   .on(\"value\", da => {\n      //     if (da.exists) {\n      //       return true;\n      //     } else return false;\n      //   });\n\n    }\n  }, {\n    key: \"as\",\n    value: function as(ref, title) {\n      fire.database().ref().child(\"Poll\").child(ref).child(\"vote\").child(\"Username\").set(title);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var a = [];\n      fire.database().ref().child(\"Poll\").on(\"child_added\", function (da) {\n        a.push({\n          a: da.val(),\n          b: da.key\n        }); // var k = {\n        //   val: da.val(),\n        //   vote: []\n        // };\n        // var Votes = [];\n        // Votes.push(da.val.votes);\n        // k = {\n        //   val: da.val(),\n        //   vote: Votes\n        // };\n        // var aa = [];\n        // aa.push(k);\n\n        _this2.setState({\n          array: a\n        });\n      });\n    }\n  }]);\n\n  function PolShow(props) {\n    var _this;\n\n    _classCallCheck(this, PolShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PolShow).call(this, props));\n    _this.a = 0;\n    _this.state = {\n      array: []\n    };\n    return _this;\n  }\n\n  _createClass(PolShow, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.array.map(function (array) {\n        return React.createElement(\"div\", {\n          style: {\n            padding: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: \"RecipeReviewCard-card-297\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          avatar: React.createElement(Avatar, {\n            \"aria-label\": \"Recipe\",\n            className: \"RecipeReviewCard-avatar-302\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, \"R\"),\n          action: React.createElement(IconButton, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(MoreVertIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          })),\n          title: \"A\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), React.createElement(CardMedia, {\n          className: \"RecipeReviewCard-media-298\",\n          title: \"Paella dish\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(CardContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, array.a.title.Pol.map(function (Pol) {\n          return React.createElement(FormControlLabel, {\n            value: \"end\",\n            control: React.createElement(Radio, {\n              checked: _this3.check.bind(_this3, array.b, Pol),\n              color: \"primary\",\n              onClick: _this3.as.bind(_this3, array.b, Pol),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122\n              },\n              __self: this\n            }),\n            label: Pol,\n            labelPlacement: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          });\n        }), \" \")));\n      }));\n    }\n  }]);\n\n  return PolShow;\n}(Component);\n\nexport default PolShow;","map":{"version":3,"sources":["/home/athrva/MyProjects/React/chat/src/Polls/PolShow.js"],"names":["React","Component","PropTypes","withStyles","classnames","Card","CardHeader","CardContent","CardActions","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","CardMedia","fire","FormControlLabel","Radio","keys","PolShow","ref","title","a","retur","database","child","set","on","da","push","val","b","key","setState","array","props","state","map","padding","Pol","check","bind","as"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classnames from \"classnames\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport fire from \"../Fire\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { keys } from \"@material-ui/core/styles/createBreakpoints\";\nclass PolShow extends Component {\n  a=0;\n  check(ref, title) {\n\n\nif(a==0){retur }\n\n    // console.log(\"A\");\n    // fire\n    //   .database()\n    //   .ref()\n    //   .child(\"Poll\")\n    //   .child(ref)\n    //   .child(\"vote\")\n    //   .child(title)\n    //   .child(\"Username\")\n    //   .on(\"value\", da => {\n    //     if (da.exists) {\n    //       return true;\n    //     } else return false;\n    //   });\n  }\n  as(ref, title) {\n    fire\n      .database()\n      .ref()\n      .child(\"Poll\")\n      .child(ref)\n      .child(\"vote\")\n      .child(\"Username\")\n      .set(title);\n  }\n  componentWillMount() {\n    var a = [];\n    fire\n      .database()\n      .ref()\n      .child(\"Poll\")\n      .on(\"child_added\", da => {\n        a.push({ a: da.val(), b: da.key });\n\n        // var k = {\n        //   val: da.val(),\n        //   vote: []\n        // };\n\n        // var Votes = [];\n        // Votes.push(da.val.votes);\n        // k = {\n        //   val: da.val(),\n        //   vote: Votes\n        // };\n        // var aa = [];\n\n        // aa.push(k);\n\n        this.setState({ array: a });\n      });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n  render() {\n    return (\n      <div>\n        {this.state.array.map(array => {\n          return (\n            <div style={{ padding: 30 }}>\n              <Card className=\"RecipeReviewCard-card-297\">\n                <CardHeader\n                  avatar={\n                    <Avatar\n                      aria-label=\"Recipe\"\n                      className=\"RecipeReviewCard-avatar-302\"\n                    >\n                      R\n                    </Avatar>\n                  }\n                  action={\n                    <IconButton>\n                      <MoreVertIcon />\n                    </IconButton>\n                  }\n                  title=\"A\"\n                />\n                <CardMedia\n                  className=\"RecipeReviewCard-media-298\"\n                  title=\"Paella dish\"\n                />\n                <CardContent>\n                  {array.a.title.Pol.map(Pol => {\n                    return (\n                      <FormControlLabel\n                        value=\"end\"\n                        control={\n                          <Radio\n                            checked={this.check.bind(this, array.b, Pol)}\n                            color=\"primary\"\n                            onClick={this.as.bind(this, array.b, Pol)}\n                          />\n                        }\n                        label={Pol}\n                        labelPlacement=\"end\"\n                      />\n                    );\n                  })}{\" \"}\n                </CardContent>\n              </Card>\n            </div>\n          );\n        })}\n        {/* {this.state.array.map(array => {\n          return (\n            <div>\n              <Card className=\"RecipeReviewCard-card-297\">\n                <CardHeader\n                  avatar={\n                    <Avatar\n                      aria-label=\"Recipe\"\n                      className=\"RecipeReviewCard-avatar-302\"\n                    >\n                      R\n                    </Avatar>\n                  }\n                  action={\n                    <IconButton>\n                      <MoreVertIcon />\n                    </IconButton>\n                  }\n                  title=\"A\"\n                />\n                <CardMedia\n                  className=\"RecipeReviewCard-media-298\"\n                  title=\"Paella dish\"\n                />\n\n                <CardContent>\n                  {array.title.Pol.map(Pol => {\n                    return (\n                      <div>\n                        <FormControlLabel\n                          value=\"end\"\n                          control={<Radio color=\"primary\" />}\n                          label={Pol}\n                          labelPlacement=\"end\"\n                        />\n                      </div>\n                    );\n                  })}\n                </CardContent>\n              </Card>\n            </div>\n          );\n        })} */}\n        {/* {this.state.array.map(array => {\n          return (\n           \n          );\n        })} */}\n      </div>\n    );\n  }\n}\n\nexport default PolShow;\n"]},"metadata":{},"sourceType":"module"}