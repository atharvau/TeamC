{"ast":null,"code":"import _classCallCheck from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/athrva/MyProjects/React/chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/athrva/MyProjects/React/chat/src/Auth/SignUp.js\";\nimport React, { Component } from \"react\";\nimport firebase from \"./Fire\"; // Careful to not import from \"firebase\"\n\nimport withFirebaseAuth from \"react-auth-firebase\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      // user object will have signed in user details if auth state changed\n      // user will be null if not logged in\n      // Use only the required methods.\n      // If a property called 'google' not given in authConfig, signInWithGoogle and googleAccessToken will not be available for use.\n      // Similar for others.\n      var _this$props = this.props,\n          signInWithEmail = _this$props.signInWithEmail,\n          signUpWithEmail = _this$props.signUpWithEmail,\n          signInWithGoogle = _this$props.signInWithGoogle,\n          signInWithFacebook = _this$props.signInWithFacebook,\n          signInWithGithub = _this$props.signInWithGithub,\n          signInWithTwitter = _this$props.signInWithTwitter,\n          googleAccessToken = _this$props.googleAccessToken,\n          facebookAccessToken = _this$props.facebookAccessToken,\n          githubAccessToken = _this$props.githubAccessToken,\n          twitterAccessToken = _this$props.twitterAccessToken,\n          twitterSecret = _this$props.twitterSecret,\n          signOut = _this$props.signOut,\n          user = _this$props.user,\n          error = _this$props.error;\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"// For Sign In\", React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"...form input to take email and password for sign in\", React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: function onClick() {\n          return signInWithEmail(email, password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"SignIn\")), \"// For Sign Up\", React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"...form input to take email and password for sign up\", React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: function onClick() {\n          return signUpWithEmail(email, password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"SignUp\")), React.createElement(\"button\", {\n        onClick: signInWithGoogle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Signin with Google\"), React.createElement(\"button\", {\n        onClick: signInWithFacebook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Signin with Facebook\"), React.createElement(\"button\", {\n        onClick: signInWithGithub,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Signin with Github\"), React.createElement(\"button\", {\n        onClick: signInWithTwitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Signin with Twitter\"));\n    }\n  }]);\n\n  return App;\n}(Component); // Important\n// See authConfig api for all available options\n// Add only the required auth types.\n// Only their related props will be added\n// For ex: signInWithGoogle will be added only when there is google object in authConfig\n// At least an empty object required to enable that method\n\n\nvar authConfig = {\n  email: {\n    verifyOnSignup: false,\n    // Sends verification email to user upon sign up\n    saveUserInDatabase: true // Saves user in database at /users ref\n\n  },\n  google: {\n    // redirect: true, // Opens a pop up by default\n    returnAccessToken: true,\n    // Returns an access token as googleAccessToken prop\n    saveUserInDatabase: true // Saves user in database at /users ref\n\n  },\n  facebook: {\n    // redirect: true, // Opens a pop up by default\n    returnAccessToken: true,\n    // Returns an access token as googleAccessToken prop\n    saveUserInDatabase: true // Saves user in database at /users ref\n\n  },\n  github: {\n    // redirect: true,\n    returnAccessToken: true,\n    saveUserInDatabase: true\n  },\n  twitter: {\n    // redirect: true,\n    returnAccessToken: true,\n    returnSecret: true,\n    saveUserInDatabase: true\n  }\n};\nexport default withFirebaseAuth(SignUp, firebase, authConfig);","map":{"version":3,"sources":["/home/athrva/MyProjects/React/chat/src/Auth/SignUp.js"],"names":["React","Component","firebase","withFirebaseAuth","App","props","signInWithEmail","signUpWithEmail","signInWithGoogle","signInWithFacebook","signInWithGithub","signInWithTwitter","googleAccessToken","facebookAccessToken","githubAccessToken","twitterAccessToken","twitterSecret","signOut","user","error","state","email","password","e","preventDefault","authConfig","verifyOnSignup","saveUserInDatabase","google","returnAccessToken","facebook","github","twitter","returnSecret","SignUp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport firebase from \"./Fire\"; // Careful to not import from \"firebase\"\nimport withFirebaseAuth from \"react-auth-firebase\";\n\nclass App extends Component {\n  render() {\n    // user object will have signed in user details if auth state changed\n    // user will be null if not logged in\n\n    // Use only the required methods.\n    // If a property called 'google' not given in authConfig, signInWithGoogle and googleAccessToken will not be available for use.\n    // Similar for others.\n\n    const {\n      signInWithEmail,\n      signUpWithEmail,\n      signInWithGoogle,\n      signInWithFacebook,\n      signInWithGithub,\n      signInWithTwitter,\n      googleAccessToken,\n      facebookAccessToken,\n      githubAccessToken,\n      twitterAccessToken,\n      twitterSecret,\n      signOut,\n      user,\n      error\n    } = this.props;\n\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        // For Sign In\n        <form onSubmit={e => e.preventDefault()}>\n          ...form input to take email and password for sign in\n          <button\n            type=\"submit\"\n            onClick={() => signInWithEmail(email, password)}\n          >\n            SignIn\n          </button>\n        </form>\n        // For Sign Up\n        <form onSubmit={e => e.preventDefault()}>\n          ...form input to take email and password for sign up\n          <button\n            type=\"submit\"\n            onClick={() => signUpWithEmail(email, password)}\n          >\n            SignUp\n          </button>\n        </form>\n        <button onClick={signInWithGoogle}>Signin with Google</button>\n        <button onClick={signInWithFacebook}>Signin with Facebook</button>\n        <button onClick={signInWithGithub}>Signin with Github</button>\n        <button onClick={signInWithTwitter}>Signin with Twitter</button>\n      </div>\n    );\n  }\n}\n\n// Important\n\n// See authConfig api for all available options\n// Add only the required auth types.\n// Only their related props will be added\n// For ex: signInWithGoogle will be added only when there is google object in authConfig\n// At least an empty object required to enable that method\n\nconst authConfig = {\n  email: {\n    verifyOnSignup: false, // Sends verification email to user upon sign up\n    saveUserInDatabase: true // Saves user in database at /users ref\n  },\n  google: {\n    // redirect: true, // Opens a pop up by default\n    returnAccessToken: true, // Returns an access token as googleAccessToken prop\n    saveUserInDatabase: true // Saves user in database at /users ref\n  },\n  facebook: {\n    // redirect: true, // Opens a pop up by default\n    returnAccessToken: true, // Returns an access token as googleAccessToken prop\n    saveUserInDatabase: true // Saves user in database at /users ref\n  },\n  github: {\n    // redirect: true,\n    returnAccessToken: true,\n    saveUserInDatabase: true\n  },\n  twitter: {\n    // redirect: true,\n    returnAccessToken: true,\n    returnSecret: true,\n    saveUserInDatabase: true\n  }\n};\n\nexport default withFirebaseAuth(SignUp, firebase, authConfig);\n"]},"metadata":{},"sourceType":"module"}