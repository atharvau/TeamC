{"ast":null,"code":"function __$styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nimport { createRef, createElement, Component } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\n__$styleInject(\"._scrollable-div_1dj6m_1 {\\r\\n  max-height: inherit;\\r\\n  height: inherit;\\r\\n  overflow-y: auto;\\r\\n}\\r\\n\", {});\n\nvar styles = {\n  \"scrollableDiv\": \"_scrollable-div_1dj6m_1\"\n};\n\nvar ScrollableFeed =\n/** @class */\nfunction (_super) {\n  __extends(ScrollableFeed, _super);\n\n  function ScrollableFeed(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.bottomRef = createRef();\n    _this.wrapperRef = createRef();\n    return _this;\n  }\n\n  ScrollableFeed.prototype.getSnapshotBeforeUpdate = function () {\n    if (this.wrapperRef.current && this.bottomRef.current) {\n      return ScrollableFeed.isViewable(this.wrapperRef.current, this.bottomRef.current); //This argument is passed down to componentDidUpdate as 3rd parameter\n    }\n\n    return false;\n  };\n\n  ScrollableFeed.prototype.componentDidUpdate = function (previousProps, _a, snapshot) {\n    var _b = this.props,\n        forceScroll = _b.forceScroll,\n        changeDetectionFilter = _b.changeDetectionFilter;\n    var isValidChange = changeDetectionFilter(previousProps, this.props);\n\n    if (isValidChange && (forceScroll || snapshot) && this.bottomRef.current && this.wrapperRef.current) {\n      this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\n    }\n  };\n\n  ScrollableFeed.prototype.componentDidMount = function () {\n    //Scroll to bottom from the start\n    if (this.bottomRef.current && this.wrapperRef.current) {\n      this.scrollParentToChild(this.wrapperRef.current, this.bottomRef.current);\n    }\n  };\n  /**\r\n   * Scrolls a parent element such that the child element will be in view\r\n   * @param parent\r\n   * @param child\r\n   */\n\n\n  ScrollableFeed.prototype.scrollParentToChild = function (parent, child) {\n    //Source: https://stackoverflow.com/a/45411081/6316091\n    var parentRect = parent.getBoundingClientRect();\n    var childRect = child.getBoundingClientRect();\n\n    if (!ScrollableFeed.isViewable(parent, child)) {\n      //Scroll by offset relative to parent\n      var scrollOffset = childRect.top + parent.scrollTop - parentRect.top;\n      var _a = this.props,\n          animateScroll = _a.animateScroll,\n          onScrollComplete = _a.onScrollComplete;\n\n      if (animateScroll) {\n        animateScroll(parent, scrollOffset);\n        onScrollComplete();\n      }\n    }\n  };\n  /**\r\n   * Returns whether a child element is visible within a parent element\r\n   * @param parent\r\n   * @param child\r\n   */\n\n\n  ScrollableFeed.isViewable = function (parent, child) {\n    //Source: https://stackoverflow.com/a/45411081/6316091\n    var parentRect = parent.getBoundingClientRect();\n    var childRect = child.getBoundingClientRect();\n    return childRect.top >= parentRect.top && childRect.top <= parentRect.top + parent.clientHeight;\n  };\n\n  ScrollableFeed.prototype.render = function () {\n    var children = this.props.children;\n    return createElement(\"div\", {\n      className: styles.scrollableDiv,\n      ref: this.wrapperRef\n    }, children, createElement(\"div\", {\n      ref: this.bottomRef\n    }));\n  };\n\n  ScrollableFeed.defaultProps = {\n    forceScroll: false,\n    animateScroll: function animateScroll(element, offset) {\n      element.scrollBy({\n        top: offset\n      });\n    },\n    onScrollComplete: function onScrollComplete() {},\n    changeDetectionFilter: function changeDetectionFilter() {\n      return true;\n    }\n  };\n  return ScrollableFeed;\n}(Component);\n\nexport default ScrollableFeed;","map":null,"metadata":{},"sourceType":"module"}